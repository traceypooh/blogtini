# https://docs.github.com/en/actions/using-workflows/reusing-workflows

name: blogtini.com lightweight build & deploy to GitHub Pages

# First, you must permit the reusable workflow to be called from another organization. For that, go to Organization settings -> Actions -> General. Under the policies, select the "Allow all actions and reusable workflows" option to use the workflow outside the organization.

# Example usage:
#on:
#  push:
#    branches: ["main"]
#jobs:
#  blogtini:
#    uses: traceypooh/blogtini/.github/workflows/blogtini.yml@main


on:
  workflow_call:

   # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: true
      - name: Setup Pages
        uses: actions/configure-pages@v5
      - name: Blogtini setup
        uses: actions/checkout@v3
        with:
          repository: traceypooh/blogtini
          path: _blogtini
      - name: Blogtini SSR head elements & sitemap
        run: |
          set -x
          sudo apt-get install -yqq zsh
          # get deno
          curl -fsSL https://deno.land/install.sh | sh
          export DENO_INSTALL="/home/runner/.deno"
          export PATH="$DENO_INSTALL/bin:$PATH"

          # get files & dir layout set up
          mkdir -p _site/bin
          mv     _blogtini/bin/* _site/bin/
          rm -rf _blogtini
          mv * _site/ || echo fine

          # run SSR and create sitemap
          ./_site/bin/ssr.sh
          if [ ! -e sitemap.xml ]; then ./_site/bin/sitemap; fi

          # cleanup
          rm -rf _site/bin
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3

  # Deploy to GitHub Pages
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
